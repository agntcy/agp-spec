



Independent Submission                                    L. Muscariello
Internet-Draft                                                     Cisco
Intended status: Informational                          28 February 2025
Expires: 1 September 2025


                         Agent Gateway Protocol
                      draft-muscariello-agp-latest

Abstract

   This document specifies the Agent Gateway Protocol (AGP), a protocol
   designed to support real-time interactive AI applications at scale.
   AGP extends gRPC with publish-subscribe capabilities to enable
   efficient many-to-many communication patterns between AI agents.  The
   protocol provides mechanisms for connection management, stream
   multiplexing, and flow control while maintaining compatibility with
   existing gRPC deployments.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at https://verbose-
   adventure-1pnqvyr.pages.github.io/.  Status information for this
   document may be found at https://datatracker.ietf.org/doc/draft-
   muscariello-agp/.

   Discussion of this document takes place on the WG Working Group
   mailing list (mailto:discussion@agntcy.org).

   Source for this draft and an issue tracker can be found at
   https://github.com/agntcy/agp.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 1 September 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.

Table of Contents

   1.  Introduction
     1.1.  Protocol Overview
   2.  Architecture
     2.1.  Protocol Layers
     2.2.  Core Components
   3.  Conventions and Definitions
   4.  Security Considerations
     4.1.  Record Signatures
     4.2.  Location Independence
     4.3.  Key Management
     4.4.  DHT Security
     4.5.  Transport Security
     4.6.  Privacy Considerations
     4.7.  Operational Security
   5.  IANA Considerations
   6.  Normative References
   Acknowledgments
   Author's Address

1.  Introduction

   As AI systems become more sophisticated and interconnected, there is
   a growing need for protocols that can support real-time interactive
   applications at scale.  The Agent Gateway Protocol (AGP) addresses
   this need by:

   *  Extending gRPC with publish-subscribe patterns

   *  Supporting bidirectional streaming between agents

   *  Enabling efficient many-to-many communication

   *  Maintaining backward compatibility with gRPC

1.1.  Protocol Overview

   AGP builds on gRPC's core features while adding:

   *  Native support for pub/sub messaging patterns

   *  Enhanced stream multiplexing capabilities

   *  Real-time event notification system

   *  Dynamic topic creation and management

2.  Architecture

2.1.  Protocol Layers

        +-------------------+
        |     Application   |
        +-------------------+
        |   AGP Services    |
        +-------------------+
        |     Pub/Sub      |
        +-------------------+
        |      gRPC        |
        +-------------------+
        |      HTTP/2      |
        +-------------------+

2.2.  Core Components

   *  Gateway Nodes: Handle routing and message distribution

   *  Topics: Named channels for pub/sub communication

   *  Streams: Bidirectional communication channels

   *  Services: Application-specific RPC definitions

3.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

4.  Security Considerations

   The Agent Directory Protocol relies on several security mechanisms to
   ensure the integrity, authenticity, and privacy of directory records:

4.1.  Record Signatures

   All agent directory records MUST be digitally signed by the producing
   agent.  The signature covers:

   *  The complete set of OASF attributes

   *  The agent's capabilities description

   *  Any additional metadata including timestamps

   *  Version information

   Signatures enable consumers to verify the authenticity and integrity
   of records independent of their location in the DHT.

4.2.  Location Independence

   Agent directory records are location-independent - their trust is
   derived from cryptographic signatures rather than network location.
   This means:

   *  Records can be cached and replicated across the DHT

   *  Consumers can verify records regardless of the serving node

   *  Man-in-the-middle attacks are prevented through signature
      verification

   *  Trust is bound to cryptographic identities rather than network
      addresses

4.3.  Key Management

   Agents MUST generate and maintain cryptographic key pairs following
   these requirements:

   *  Use of asymmetric cryptography (e.g., Ed25519) for signing

   *  Private keys MUST be properly secured by agents using hardware
      security modules where available

   *  Public keys are distributed as part of agent records

   *  Key rotation procedures MUST be supported and documented

   *  Revocation mechanisms MUST be provided

4.4.  DHT Security

   The DHT implementation MUST provide:

   *  Node authentication to prevent Sybil attacks

   *  Secure routing to prevent record tampering

   *  Replication policies to ensure availability

   *  Access controls for record updates

   *  Protection against eclipse attacks

   *  Rate limiting of requests

   *  Peer reputation tracking

4.5.  Transport Security

   All protocol interactions MUST use secure transport with:

   *  Mutual TLS authentication between nodes

   *  Perfect forward secrecy

   *  Strong cipher suites as defined in TLS 1.3

   *  Certificate-based authentication

   *  Revocation checking

   Implementations MUST NOT support:

   *  Plaintext communications

   *  Weak cipher suites

   *  Older TLS versions

4.6.  Privacy Considerations

   The protocol implements privacy protection through:

   *  Minimal attribute disclosure

   *  Encrypted record contents

   *  Anonymous routing capabilities

   *  Pseudonymous agent identities

   *  Access control mechanisms

4.7.  Operational Security

   Implementers MUST consider:

   *  Regular key rotation schedules

   *  Secure bootstrapping procedures

   *  Node authentication policies

   *  Resource exhaustion protections

   *  Monitoring and alerting systems

   *  Incident response procedures

5.  IANA Considerations

   This document has no IANA actions.

6.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Luca Muscariello
   Cisco
   Email: lumuscar@cisco.com
